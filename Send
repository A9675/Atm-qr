<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8" />
  <title>üì¢ ‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§≠‡•á‡§ú‡•á‡§Ç</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    /* Reset ‡§î‡§∞ ‡§¨‡•â‡§ï‡•ç‡§∏ ‡§∏‡§æ‡§á‡§ú */
    *, *::before, *::after {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f0f4f5;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 15px;
    }

    .container {
      background: #fff;
      width: 100%;
      max-width: 420px;
      padding: 25px 30px;
      border-radius: 16px;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
    }

    h2 {
      margin: 0 0 20px;
      color: #00796b;
      text-align: center;
      font-weight: 700;
      font-size: 1.8rem;
    }

    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #333;
      font-size: 1rem;
    }

    input[type="text"],
    input[type="url"],
    textarea {
      width: 100%;
      padding: 12px 14px;
      margin-bottom: 18px;
      border: 1.8px solid #b0bec5;
      border-radius: 10px;
      font-size: 1rem;
      transition: border-color 0.3s ease;
      resize: vertical;
    }

    input[type="text"]:focus,
    input[type="url"]:focus,
    textarea:focus {
      outline: none;
      border-color: #00bfa5;
      box-shadow: 0 0 6px #00bfa5aa;
    }

    textarea {
      min-height: 100px;
    }

    button {
      width: 100%;
      background-color: #00bfa5;
      border: none;
      padding: 14px;
      border-radius: 12px;
      font-size: 1.1rem;
      color: white;
      font-weight: 700;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #009688;
    }

    .status {
      margin-top: 18px;
      text-align: center;
      font-weight: 700;
      font-size: 1rem;
    }

    .status.success {
      color: #2e7d32;
    }

    .status.error {
      color: #d32f2f;
    }

    /* ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§õ‡•ã‡§ü‡•á ‡§∏‡•ç‡§ï‡•ç‡§∞‡•Ä‡§® */
    @media (max-width: 480px) {
      .container {
        padding: 20px 20px;
        border-radius: 12px;
      }

      h2 {
        font-size: 1.5rem;
      }

      label, input, textarea, button {
        font-size: 0.95rem;
      }

      textarea {
        min-height: 80px;
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <h2>üì¢ ‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§≠‡•á‡§ú‡•á‡§Ç</h2>

    <label for="title">‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï (Title):</label>
    <input type="text" id="title" placeholder="‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§ï‡§æ ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï ‡§≤‡§ø‡§ñ‡•á‡§Ç" required />

    <label for="message">‡§∏‡§Ç‡§¶‡•á‡§∂ (Message):</label>
    <textarea id="message" placeholder="‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§ï‡§æ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≤‡§ø‡§ñ‡•á‡§Ç" required></textarea>

    <label for="url">‡§∞‡§ø‡§°‡§æ‡§Ø‡§∞‡•á‡§ï‡•ç‡§ü URL (‡§Ø‡§¶‡§ø ‡§π‡•ã ‡§§‡•ã):</label>
    <input type="url" id="url" placeholder="https://example.com/page" />

    <button onclick="sendNotification()">‡§≠‡•á‡§ú‡•á‡§Ç</button>

    <div id="status" class="status"></div>
  </div>

  <script>
    async function sendNotification() {
      const title = document.getElementById('title').value.trim();
      const message = document.getElementById('message').value.trim();
      const url = document.getElementById('url').value.trim();
      const status = document.getElementById('status');

      if (!title || !message) {
        status.textContent = "‡§ï‡•É‡§™‡§Ø‡§æ ‡§∂‡•Ä‡§∞‡•ç‡§∑‡§ï ‡§î‡§∞ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§≠‡§∞‡•á‡§Ç‡•§";
        status.className = "status error";
        return;
      }

      if (url && !/^https?:\/\/.+/.test(url)) {
        status.textContent = "‡§ï‡•É‡§™‡§Ø‡§æ ‡§µ‡•à‡§ß URL ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (http:// ‡§Ø‡§æ https:// ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç)‡•§";
        status.className = "status error";
        return;
      }

      status.textContent = "‡§≠‡•á‡§ú‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...";
      status.className = "status";

      try {
        // ‡§Ø‡§π‡§æ‡§Å ‡§Ö‡§™‡§®‡•Ä backend ‡§Ø‡§æ Google Apps Script ‡§ï‡•Ä URL ‡§≤‡§ó‡§æ‡§è‡§Ç
        const response = await fetch('https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ title, message, url }),
        });

        if (response.ok) {
          status.textContent = "‚úÖ ‡§®‡•ã‡§ü‡§ø‡§´‡§ø‡§ï‡•á‡§∂‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§≠‡•á‡§ú ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!";
          status.className = "status success";
          // ‡§´‡•â‡§∞‡•ç‡§Æ ‡§ñ‡§æ‡§≤‡•Ä ‡§ï‡§∞‡§®‡§æ ‡§π‡•à ‡§§‡•ã uncomment ‡§ï‡§∞‡•á‡§Ç
          // document.getElementById('title').value = '';
          // document.getElementById('message').value = '';
          // document.getElementById('url').value = '';
        } else {
          const text = await response.text();
          throw new Error(text);
        }
      } catch (err) {
        status.textContent = "‚ùå ‡§≠‡•á‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: " + err.message;
        status.className = "status error";
      }
    }
  </script>

</body>
</html>
